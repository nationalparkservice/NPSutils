[{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to CONTRIBUTING.md","title":"Contributing to CONTRIBUTING.md","text":"First , thanks taking time contribute! types contributions encouraged valued. See Table Contents different ways help details project handles . Please make sure read relevant section making contribution. make lot easier us maintainers smooth experience involved. community looks forward contributions. like project, just don’t time contribute, ’s fine. easy ways support project show appreciation, also happy : - Star project - Refer project project’s readme - Mention project local meetups tell friends/colleagues - Cite packages published works","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of Contents","title":"Contributing to CONTRIBUTING.md","text":"Question Want Contribute Reporting Bugs Suggesting Enhancements First Code Contribution Improving Documentation Styleguides Commit Messages Join Project Team","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"i-have-a-question","dir":"","previous_headings":"","what":"I Have a Question","title":"Contributing to CONTRIBUTING.md","text":"want ask question, assume read available Documentation. ask question, best search existing Issues might help . case found suitable issue still need clarification, can write question issue. also advisable search internet answers first. still feel need ask question need clarification, recommend following: Open Issue. Provide much context can ’re running . Provide project platform versions , depending seems relevant. take care issue soon possible.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"i-want-to-contribute","dir":"","previous_headings":"","what":"I Want To Contribute","title":"Contributing to CONTRIBUTING.md","text":"contributing project, must agree authored 100% content, necessary rights content content contribute may provided project license.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"before-submitting-a-bug-report","dir":"","previous_headings":"I Want To Contribute > Reporting Bugs","what":"Before Submitting a Bug Report","title":"Contributing to CONTRIBUTING.md","text":"good bug report shouldn’t leave others needing chase information. Therefore, ask investigate carefully, collect information describe issue detail report. Please complete following steps advance help us fix potential bug fast possible. Make sure using latest version. Determine bug really bug error side e.g. using incompatible environment components/versions (Make sure read documentation. looking support, might want check section). see users experienced (potentially already solved) issue , check already bug report existing bug error bug tracker. Also make sure search internet see users outside GitHub community discussed issue. Collect information bug: Stack trace (Traceback) OS, Platform Version (Windows, Linux, macOS, x86, ARM) Version interpreter, compiler, SDK, runtime environment, package manager, depending seems relevant. Possibly input output Can reliably reproduce issue? can also reproduce older versions?","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"how-do-i-submit-a-good-bug-report","dir":"","previous_headings":"I Want To Contribute > Reporting Bugs","what":"How Do I Submit a Good Bug Report?","title":"Contributing to CONTRIBUTING.md","text":"must never report security related issues, vulnerabilities bugs including sensitive information issue tracker, elsewhere public. Instead sensitive bugs must sent email robert_baker@nps.gov. use GitHub issues track bugs errors. run issue project: Open Issue. (Since can’t sure point whether bug , ask talk bug yet label issue.) Explain behavior expect actual behavior. Please provide much context possible describe reproduction steps someone else can follow recreate issue . usually includes code. good bug reports isolate problem create reduced test case. See https://gist.github.com/hadley/270442 great run create reproducible examples. Provide information collected previous section. ’s filed: project team label issue accordingly. team member try reproduce issue provided steps. reproduction steps obvious way reproduce issue, team ask steps mark issue needs-repro. Bugs needs-repro tag addressed reproduced. team able reproduce issue, marked needs-fix, well possibly tags, issue left implemented someone development team. may also address issue issue pull request, reviewed development team.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"suggesting-enhancements","dir":"","previous_headings":"I Want To Contribute","what":"Suggesting Enhancements","title":"Contributing to CONTRIBUTING.md","text":"section guides submitting enhancement including completely new features minor improvements existing functionality. Following guidelines help maintainers community understand suggestion find related suggestions.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"before-submitting-an-enhancement","dir":"","previous_headings":"I Want To Contribute > Suggesting Enhancements","what":"Before Submitting an Enhancement","title":"Contributing to CONTRIBUTING.md","text":"Make sure using latest version. Read documentation carefully find functionality already covered, maybe individual configuration. Perform search see enhancement already suggested. , add comment existing issue instead opening new one. Find whether idea fits scope aims project. ’s make strong case convince project’s developers merits feature. Keep mind want features useful majority users just small subset. ’re just targeting minority users, consider writing add-/plugin library package. Please consult developers like create add-package. Maybe can help!","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"how-do-i-submit-a-good-enhancement-suggestion","dir":"","previous_headings":"I Want To Contribute > Suggesting Enhancements","what":"How Do I Submit a Good Enhancement Suggestion?","title":"Contributing to CONTRIBUTING.md","text":"Enhancement suggestions tracked GitHub issues. Use clear descriptive title issue identify suggestion. Provide step--step description suggested enhancement many details possible. Describe current behavior explain behavior expected see instead . point can also tell alternatives work . may want include screenshots animated GIFs help demonstrate steps point part suggestion related . good free software generating GIFs across major operating systems. Explain enhancement useful users. may also want point projects solved better serve inspiration.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"your-first-code-contribution","dir":"","previous_headings":"I Want To Contribute","what":"Your First Code Contribution","title":"Contributing to CONTRIBUTING.md","text":"like contribute code please make adjustments issue pull request. development team review code prior merging pull request. issuing pull request make sure: 1) added description changes made changelog NEWS.md 2) added function, make sure also include unit tests cover function. changed function, make sure unit tests still pass. 3) added changed function, make sure package loads using devtools::load_all(). 2) updated necessary documentation using devtools::document() 3) updated associated web pages using pkgdown::build_site_github_pages() 4) checked errors warnings package built using devtools::check().","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"styleguides","dir":"","previous_headings":"","what":"Styleguides","title":"Contributing to CONTRIBUTING.md","text":"encourage use tidyverse style guide.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"Styleguides","what":"Commit Messages","title":"Contributing to CONTRIBUTING.md","text":"Commit messages short descriptive.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributing to CONTRIBUTING.md","text":"guide based contributing.md. Make !","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 NPSutils authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/articles/NPSutils.html","id":"nps-data-store-utilities","dir":"Articles","previous_headings":"","what":"NPS Data Store Utilities","title":"NPSutils","text":"package collection functions acquire metadata data National Park Service Data Store. early version package many features added 2023. Please request enhancements bug fixes Issues. functions active development apologize borked.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/articles/NPSutils.html","id":"install-from-github","dir":"Articles","previous_headings":"","what":"Install from GitHub","title":"NPSutils","text":"NPSutils also available part NPSdataverse","code":"# install.packages(\"devtools\") devtools::install_github(\"nationalparkservice/NPSutils\") # install.packages(\"devtools\") devtools::install_github(\"nationalparkservice/NPSdataverse\")"},{"path":"https://nationalparkservice.github.io/NPSutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Baker. Author, maintainer. Joe DeVivo. Author. Judd Patterson. Author. Sarah E. Wright. Author.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Baker R, DeVivo J, Patterson J, Wright SE (2025). NPSutils: Collection Functions read manipulate information NPS DataStore. R package version 1.0.1, https://nationalparkservice.github.io/NPSutils/.","code":"@Manual{,   title = {NPSutils: Collection of Functions to read and manipulate information from the NPS DataStore},   author = {Robert Baker and Joe DeVivo and Judd Patterson and Sarah E. Wright},   year = {2025},   note = {R package version 1.0.1},   url = {https://nationalparkservice.github.io/NPSutils/}, }"},{"path":"https://nationalparkservice.github.io/NPSutils/index.html","id":"nps-data-store-utilities---npsutils","dir":"","previous_headings":"","what":"Collection of Functions to read and manipulate information from the NPS DataStore","title":"Collection of Functions to read and manipulate information from the NPS DataStore","text":"package collection functions acquire metadata data National Park Service DataStore. Please request enhancements bug fixes Issues.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/index.html","id":"install-from-github","dir":"","previous_headings":"","what":"Install from GitHub","title":"Collection of Functions to read and manipulate information from the NPS DataStore","text":"NPSutils also available part NPSdataverse","code":"# install.packages(\"pak\") pak::pkg_install(\"nationalparkservice/NPSutils\") # install.packages(\"pak\") pak::pkg_install(\"nationalparkservice/NPSdataverse\")"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/NPSutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"NPSutils: Collection of Functions to read and manipulate information from the NPS DataStore — NPSutils-package","title":"NPSutils: Collection of Functions to read and manipulate information from the NPS DataStore — NPSutils-package","text":"NPSutils collection functions interacting NPS DataStore repository.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/NPSutils/reference/NPSutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NPSutils: Collection of Functions to read and manipulate information from the NPS DataStore — NPSutils-package","text":"Maintainer: Robert Baker robert_baker@nps.gov (ORCID) Authors: Joe DeVivo Judd Patterson Judd_Patterson@nps.gov (ORCID) Sarah E. Wright sarah_wright@nps.gov (ORCID)","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_is_data_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether reference is a data package — check_is_data_package","title":"Check whether reference is a data package — check_is_data_package","text":"function tests whether valid DataStore reference data package . data package, value \"TRUE\" returned. data package, value FALSE returned. default setting assumes user logged VPN (secure = TRUE), can set secure = FALSE non-NPS users. relatively simple helper function test whether reference exists may produce unexpected errors reference exist accessible. advised run `check_reference_exists()` prior using function.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_is_data_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether reference is a data package — check_is_data_package","text":"","code":"check_is_data_package(reference_id, secure = TRUE, dev = FALSE)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_is_data_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether reference is a data package — check_is_data_package","text":"reference_id Integer. 7-digit number indicating datastore reference queried. secure Logical. Defaults TRUE, indicating user logged NPS VPN (accessing resource NPS office). Can set FALSE non-NPS users. `secure` set FALSE, `dev` automatically set FALSE. dev Logical. Defaults FALSE, indicating user wishes work production version DataStore. Can set TRUE user wants work development environment DataStore. Setting dev = TRUE work user appropriate permissions. Requires secure = TRUE.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_is_data_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether reference is a data package — check_is_data_package","text":"Logical.FALSE DataStore reference data package. TRUE DataStore reference data package.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_is_data_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether reference is a data package — check_is_data_package","text":"","code":"if (FALSE) { # \\dontrun{ check_is_data_package(1234567) check_is_data_package(1234567, secure = FALSE) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_new_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether a reference has a more recent version — check_new_version","title":"Checks whether a reference has a more recent version — check_new_version","text":"function tests whether existing accessible DataStore reference newer version . newer version exists, value \"TRUE\" returned. newer version exist, value FALSE returned. default setting assumes user logged VPN (secure = TRUE), can set secure = FALSE non-NPS users. relatively simple helper function test whether reference exists may produce unexpected errors reference exist accessible. advised run `check_reference_exists()` prior using function.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_new_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether a reference has a more recent version — check_new_version","text":"","code":"check_new_version(reference_id, secure = TRUE, dev = FALSE)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_new_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether a reference has a more recent version — check_new_version","text":"reference_id Integer. 7-digit number indicating datastore reference queried. secure Logical. Defaults TRUE, indicating user logged NPS VPN (accessing resource NPS office). Can set FALSE non-NPS users. `secure` set FALSE, `dev` automatically set FALSE. dev Logical. Defaults FALSE, indicating user wishes work production version DataStore. Can set TRUE user wants work development environment DataStore. Setting dev = TRUE work user appropriate permissions. Requires secure = TRUE.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_new_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether a reference has a more recent version — check_new_version","text":"Logical. TRUE newer version exists, FALSE newer version  exist.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_new_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks whether a reference has a more recent version — check_new_version","text":"","code":"if (FALSE) { # \\dontrun{ check_new_version(1234567) check_new_version(1234567, secure = FALSE) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_ref_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a reference exists on DataStore — check_ref_exists","title":"Check whether a reference exists on DataStore — check_ref_exists","text":"given DataStore reference ID, function hit DataStore API determine whether reference exists. contact DataStore, stop error states connection failed.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_ref_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a reference exists on DataStore — check_ref_exists","text":"","code":"check_ref_exists(reference_id, secure = TRUE, dev = FALSE)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_ref_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a reference exists on DataStore — check_ref_exists","text":"reference_id Integer. 7-digit number indicating datastore reference queried. secure Logical. Defaults TRUE, indicating user logged NPS VPN (accessing resource NPS office). Can set FALSE non-NPS users. `secure` set FALSE, `dev` automatically set FALSE. dev Logical. Defaults FALSE, indicating user wishes work production version DataStore. Can set TRUE user wants work development environment DataStore. Setting dev = TRUE work user appropriate permissions. Requires secure = TRUE.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_ref_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a reference exists on DataStore — check_ref_exists","text":"logical. TRUE means reference exists, false means exist.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/check_ref_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether a reference exists on DataStore — check_ref_exists","text":"","code":"if (FALSE) { # \\dontrun{ check_ref_exists(1234567) check_ref_exists(1234567, secure = FALSE) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_data_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve digital data package holding(s) from DataStore. — get_data_packages","title":"Retrieve digital data package holding(s) from DataStore. — get_data_packages","text":"`get_data_packages()` creates directory called \"data\" current working directory (user-specified location, see `path` option). data package, writes new sub-directory within \"data\" directory named corresponding data package reference ID. data package files copied directory specific data package.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_data_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve digital data package holding(s) from DataStore. — get_data_packages","text":"","code":"get_data_packages(   reference_id,   secure = FALSE,   path = here::here(),   force = FALSE,   dev = FALSE )  get_data_package(   reference_id,   secure = FALSE,   path = here::here(),   force = FALSE,   dev = FALSE )"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_data_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve digital data package holding(s) from DataStore. — get_data_packages","text":"reference_id 6-7 digit number corresponding reference ID data package. secure logical indicating whether file acquired using data services available NPS internal staff . Defaults FALSE public data. TRUE indicates internal data requires VPN connection (unless NPS office). path String. Indicates location \"data\" directory sub-directories files written . Defaults working directory. force Logical. Defaults FALSE. FALSE condition, user prompted directory already exists asked whether overwrite . user also given information files downloaded, extracted, deleted, written . user also notified newer version requested data package given option download newest version instead requested version. also provides information errors () encountered give suggestions address . user may choose set `force = TRUE`, especially scripting batch processing minimize print statements console.  force set TRUE, existing files automatically overwritten without prompting. Feedback files downloaded reported. user informed newer versions requested data packages; exact reference specified downloaded. reference ID corresponds something data package, contents downloaded anyway. critical errors stop function (failed API calls) generate warnings. Failed downloads (invalid reference ID, insufficient DataStore privileges) result empty folder corresponding data package within 'data' folder. dev Logical. Defaults FALSE. FALSE indicates operations performed DataStore's production environment. Setting dev = TRUE enables running functions DataStore development environment. Working development environment allow test functions code without affecting publicly accessible DataStore application.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_data_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve digital data package holding(s) from DataStore. — get_data_packages","text":"String. path (including /data folder) data package sub-directories data files contained.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_data_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve digital data package holding(s) from DataStore. — get_data_packages","text":"default mode (force = FALSE), `get_data_packages()` inform user directory data package already exists give user option overwrite (skip downloading). default mode (force = FALSE), `get_data_packages()` also check see newer versions requested data package newer versions, `get_data_packages()` inform user requested data package issued, newest data package issued, ask user like download newest version instead requested version. default mode (force = FALSE), `get_data_packages()` warn user reference ID supplied found (exist requires VPN) reference ID refers product data package, `get_data_packages()` ask user wants attempt download anyway. `get_data_packages()` automatically time individual file download exceeds 300 seconds (5 minutes). large files slow internet connections may hit limit. Although `get_data_packages()` designed handle data package reference type DataStore, theory work reference type download files associated reference (ignores web links/web resources associated reference). reference includes .zip file, file downloaded contents extracted. original .zip archive file deleted. .zip contains files name files parent directory, parent directory files -written contents .zip archive.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_data_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve digital data package holding(s) from DataStore. — get_data_packages","text":"","code":"if (FALSE) { # \\dontrun{ # get a public data package get_data_packages(2300498, secure = FALSE)  # get a list of data packages, some public some restricted get_data_packages(c(2272461, 1234567, 7654321), secure = TRUE)  # pass a list of data packages to retrieve to the function: data_packages <- c(2272461, 1234567, 7654321) get_data_packages(data_packages, secure = TRUE, path = \"../../my_custom_directory\")  # get a data package and return the path the data package is saved to pathToDataForPiping <- get_data_packages(2272461, secure = TRUE, force = FALSE) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_new_version_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get newest DataStore reference version — get_new_version_id","title":"Get newest DataStore reference version — get_new_version_id","text":"DataStore reference versioned, `get_new_version_id()` return DataStore reference ID newest version. reference versioned, function returns NULL.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_new_version_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get newest DataStore reference version — get_new_version_id","text":"","code":"get_new_version_id(reference_id, secure = TRUE, dev = FALSE)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_new_version_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get newest DataStore reference version — get_new_version_id","text":"reference_id Integer. 7-digit number indicating datastore reference queried. secure Logical. Defaults TRUE, indicating user logged NPS VPN (accessing resource NPS office). Can set FALSE non-NPS users. `secure` set FALSE, `dev` automatically set FALSE. dev Logical. Defaults FALSE, indicating user wishes work production version DataStore. Can set TRUE user wants work development environment DataStore. Setting dev = TRUE work user appropriate permissions. Requires secure = TRUE.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_new_version_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get newest DataStore reference version — get_new_version_id","text":"Integer. 7-digit integer corresponding DataStore reference ID newest version supplied DataStore reference. supplied reference versioned, NULL returned.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_new_version_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get newest DataStore reference version — get_new_version_id","text":"","code":"if (FALSE) { # \\dontrun{ get_new_version_id(1234567) get_new_version_id(1234567, secure = FALSE) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Restricts get_unit_code to just National Parks — get_park_code","title":"Restricts get_unit_code to just National Parks — get_park_code","text":"`get_park_code` identical `get_unit_code` except output restricted just National Parks (opposed including networks, etc.). Accesses info irmaservices.nps.gov. Search park park unit string return applicable national park unitCodes.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restricts get_unit_code to just National Parks — get_park_code","text":"","code":"get_park_code(park)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restricts get_unit_code to just National Parks — get_park_code","text":"park case-insensitive string containing part unit's FullName, e.g \"Yellow\".","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restricts get_unit_code to just National Parks — get_park_code","text":"one data frame global environment. May contain multiple matches.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restricts get_unit_code to just National Parks — get_park_code","text":"","code":"if (FALSE) { # \\dontrun{ get_park_code(\"Yellow\") } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_citations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DataStore Citations for a park-species combination — get_park_taxon_citations","title":"Get DataStore Citations for a park-species combination — get_park_taxon_citations","text":"get_park_taxon_citations returns vector citations Data Store corresponding particular taxon park. `get_park_taxon_citations()` accesses restricted data secure DataStore server, results queries need considered potential park-specific data protection protocols. Note function returns citations \"tagged\" taxon code may represent subset references information taxon.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_citations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DataStore Citations for a park-species combination — get_park_taxon_citations","text":"","code":"get_park_taxon_citations(park_code, taxon_code)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_citations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get DataStore Citations for a park-species combination — get_park_taxon_citations","text":"park_code four-letter unit code park interest. taxon_code IRMA taxon code.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_citations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DataStore Citations for a park-species combination — get_park_taxon_citations","text":"dataframe","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_citations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get DataStore Citations for a park-species combination — get_park_taxon_citations","text":"","code":"if (FALSE) { # \\dontrun{ get_park_taxon_citations(\"APIS\", 126749) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DS References for a park-species combination — get_park_taxon_refs","title":"Get DS References for a park-species combination — get_park_taxon_refs","text":"get_park_taxon_refs returns tibble metadata references Data Store corresponding particular taxon park. resultant data frame usable functions extract metadata records. `get_park_taxon_refs()` accesses restricted data secure DataStore server, results queries need considered potential park-specific data protection protocols. Note function returns references \"tagged\" taxon code may represent subset references information taxon.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DS References for a park-species combination — get_park_taxon_refs","text":"","code":"get_park_taxon_refs(park_code, taxon_code)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get DS References for a park-species combination — get_park_taxon_refs","text":"park_code four-letter unit code park interest. taxon_code IRMA taxon code.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_refs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get DS References for a park-species combination — get_park_taxon_refs","text":"","code":"if (FALSE) { # \\dontrun{ get_park_taxon_refs(\"APIS\", 126749) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URL for references for a park-species combination — get_park_taxon_url","title":"Get URL for references for a park-species combination — get_park_taxon_url","text":"get_park_taxon_url returns vector URLs references Data Store corresponding particular taxon park.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URL for references for a park-species combination — get_park_taxon_url","text":"","code":"get_park_taxon_url(park_code, taxon_code)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URL for references for a park-species combination — get_park_taxon_url","text":"park_code four-letter unit code park interest. taxon_code IRMA taxon code.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_url.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get URL for references for a park-species combination — get_park_taxon_url","text":"Note function returns URLs references \"tagged\" taxon code may represent subset references information taxon.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_park_taxon_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get URL for references for a park-species combination — get_park_taxon_url","text":"","code":"if (FALSE) { # \\dontrun{ get_park_taxon_url(\"APIS\", 126749) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get citation for Data Store holding info by reference ID — get_ref_info","title":"Get citation for Data Store holding info by reference ID — get_ref_info","text":"`get_ref_info` returns character string vector information one metadata fields Data Store reference's associated xml file.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get citation for Data Store holding info by reference ID — get_ref_info","text":"","code":"get_ref_info(reference_id, field)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get citation for Data Store holding info by reference ID — get_ref_info","text":"reference_id six-seven digit reference ID number unique data store record. field one following: \"Title\" returns title data store reference string value; \"Abstract\" returns abstract string value; \"Citation\" returns citation string value, \"Keywords\" returns vector containing keywords character values.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get citation for Data Store holding info by reference ID — get_ref_info","text":"","code":"if (FALSE) { # \\dontrun{ get_ref_info(2266196, \"Title\") } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of reference codes from DataStore — get_ref_list","title":"Get a list of reference codes from DataStore — get_ref_list","text":"`get_ref_list` return list DataStore reference codes associated given reference type. \"\" might bit generous: expect number given \"no_of_entries\" technically number entries per page function defaults returning just one page (entirely sure \"page\" context).","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of reference codes from DataStore — get_ref_list","text":"","code":"get_ref_list(   reference_type = \"dataPackage\",   no_of_entries = 500,   secure = FALSE )"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of reference codes from DataStore — get_ref_list","text":"reference_type String. reference type query data store . Defaults data package (\"dataPackage\"). no_of_entries Integer. number entries return per page (one \"page\" results returned default). Defaults 500. secure Logical. Defaults FALSE external users. Setting secure = TRUE , proper credentials, return DataStore references visibility set Public Restricted.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of reference codes from DataStore — get_ref_list","text":"List reference IDs","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_ref_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of reference codes from DataStore — get_ref_list","text":"","code":"if (FALSE) { # \\dontrun{ get_ref_list() } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_refs_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Basic information about a list of DataStore References — get_refs_info","title":"Return Basic information about a list of DataStore References — get_refs_info","text":"function return data frame containing information given number references within reference type. data returned includes reference ID (referenceId), date references activated DataStore (dateOfIssue), references visibility (visibility), number files associated reference (fileCount), access level files (fileAccess), reference title (title), abbreviated citation (citation), URL DataStore reference (referenceUrl), group-type reference (referenceGroupType), type reference (typeName), whether reference DOI associated (isDOI), whether newer version reference (newVersion) recent version reference (mostRecentReference).","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_refs_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Basic information about a list of DataStore References — get_refs_info","text":"","code":"get_refs_info(   reference_type = \"dataPackage\",   no_of_entries = 500,   secure = FALSE )"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_refs_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Basic information about a list of DataStore References — get_refs_info","text":"reference_type String. reference type query data store . Defaults data package (\"dataPackage\"). no_of_entries Integer. number entries return per page (one \"page\" results returned default). Defaults 500. secure Logical. Defaults FALSE external users. Setting secure = TRUE , proper credentials, return DataStore references visibility set Public Restricted.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_refs_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Basic information about a list of DataStore References — get_refs_info","text":"data frame","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_refs_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Basic information about a list of DataStore References — get_refs_info","text":"","code":"if (FALSE) { # \\dontrun{ get_ref_info() } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamically access NPS park unit code data — get_unit_code","title":"Dynamically access NPS park unit code data — get_unit_code","text":"Accesses info irmaservices.nps.gov. Search park park unit string return applicable UnitCodes.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamically access NPS park unit code data — get_unit_code","text":"","code":"get_unit_code(unit)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamically access NPS park unit code data — get_unit_code","text":"unit case-insensitive string containing part unit's FullName.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamically access NPS park unit code data — get_unit_code","text":"one data frame global environment. May contain multiple matches.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dynamically access NPS park unit code data — get_unit_code","text":"Contains multiple somewhat redundant functions searching park units including unit codes, names, states, regions, networks, regions, etc. functions can handy need supply unit code downloading data know park name, unit code know park, region, etc refers , want know parks within given network, region, state (note: actually supply park units, just National Parks). Regions use region numbering system underlying data code draws irma include region numbers.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamically access NPS park unit code data — get_unit_code","text":"","code":"if (FALSE) { # \\dontrun{ get_unit_code(\"Rocky\") } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets information about a park Unit Code — get_unit_code_info","title":"Gets information about a park Unit Code — get_unit_code_info","text":"`get_unit_code_info` accesses info irmaservices.nps.gov allows search Park Unit Code determine park, network, entity associated along ancillary information.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets information about a park Unit Code — get_unit_code_info","text":"","code":"get_unit_code_info(code)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets information about a park Unit Code — get_unit_code_info","text":"code case-insensitive string. typically 4 letters long typically include numbers may longer, shorter, include special characters \"-\", e.g. \"SFCN\".","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets information about a park Unit Code — get_unit_code_info","text":"one data frame global environment. May contain multiple matches. Sufficient detail provided determine intended  Park Unit's name. Data frame includes UnitCode, FullName, UnitLifeCycle, Network, Region, StateCodes.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_code_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets information about a park Unit Code — get_unit_code_info","text":"","code":"if (FALSE) { # \\dontrun{ get_unit_code_info(\"SFCN\") } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Search irmaservices.nps using any piece of information. — get_unit_info","title":"Search irmaservices.nps using any piece of information. — get_unit_info","text":"`get_unit_info` accesses info irmaservices.nps.gov allows search Park Unit based number combination parameters. parameters need specified, probably worth specifying parameters specified, e.g. get.unitInfo(LifeCycle=\"Inactive\"). arguments specified, default order supplied function.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search irmaservices.nps using any piece of information. — get_unit_info","text":"","code":"get_unit_info(   code = NULL,   park = NULL,   life_cycle = NULL,   network_code = NULL,   net_name = NULL,   region_abb = NULL,   region = NULL,   state = NULL )"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search irmaservices.nps using any piece of information. — get_unit_info","text":"code defaults NULL. case-insensitive string. typically 4 letters long typically include numbers may longer, shorter, include special characters \"-\". park defaults NULL. case-insensitive string. search subset FullName parks park units life_cycle case-insensitive string filter search results based LifeCycle status. Currently acceptable values : * \"Active\", \"Inactive\" \"Pending\" network_code defaults NULL. case-insensitive string network code (subset ). Note: park units Network designations. net_name defaults NULL. case-insensitive string containing network name (subset ). Note park units associated networks. region_abb defaults NULL. case-insensitive string containing region abbreviation (subset ), e.g.IMR Intermountain Region. park units associated region. region defaults NULL. case-insensitive string region name (subset ). park units associated region. state defaults NULL. case-insensitive search park unit's state. States indicated using 2-letter abbreviations. Park units may span multiple states. parks state designations.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search irmaservices.nps using any piece of information. — get_unit_info","text":"one data frame global environment. May contain multiple matches. Sufficient detail provided determine intended  Park Unit's name.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/get_unit_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search irmaservices.nps using any piece of information. — get_unit_info","text":"","code":"if (FALSE) { # \\dontrun{ get_unit_info(state = \"CO\") } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_core_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets common EML metadata elements and puts them in a dataframe #' `r lifecycle::badge('experimental')` — load_core_metadata","title":"Gets common EML metadata elements and puts them in a dataframe #' `r lifecycle::badge('experimental')` — load_core_metadata","text":"#' @description `load_core_metadata()` gets commonly used EML metadata items previously downloaded data package, extracts , returns single data frame. particularly useful importing data packages Power BI Power BI import items data frames.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_core_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets common EML metadata elements and puts them in a dataframe #' `r lifecycle::badge('experimental')` — load_core_metadata","text":"","code":"load_core_metadata(ds_ref, path = here::here(\"data\"))"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_core_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets common EML metadata elements and puts them in a dataframe #' `r lifecycle::badge('experimental')` — load_core_metadata","text":"ds_ref Integer. DataStore reference number previously downloaded data package (downloaded using `get_data_packages()`). path String. location data package. used default settings data packages downloaded `get_data_packages()`, directory can also left default.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_core_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets common EML metadata elements and puts them in a dataframe #' `r lifecycle::badge('experimental')` — load_core_metadata","text":"dataframe","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_core_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gets common EML metadata elements and puts them in a dataframe #' `r lifecycle::badge('experimental')` — load_core_metadata","text":"#' @details returned dataframe three columns, EML_element, EML_data EML_data2. EML_element describes EML element extracted. EML_data EML_data2 contain data element. case EML_elements one piece data (e.g. data package title), data repeated EML_data EML_data2 columns.  cases element contains two related pieces data (e.g. author), items held EML_data (e.g. author's name) EML_data2 (e.g. author's email address). Currently function development may issues author organization. data package issues, please contact [robert_baker@nps.gov](mailto:robert_baker@nps.gov). fields returned dataframe include: title, publication date, authors (emails), contacts (emails), publisher, DOI, publisher city, publisher state, content begin date, content end date, abstract, notes, \"NPS\", license name (e.g. \"Public Domain\", \"CC0\"), list data file data package name.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_core_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets common EML metadata elements and puts them in a dataframe #' `r lifecycle::badge('experimental')` — load_core_metadata","text":"","code":"if (FALSE) { # \\dontrun{ df <- load_core_metadata(1234567) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_data_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Read contents of data package(s) and return a list of tibbles list of tibbles based on the data file(s). Can use metadata to specify data types. — load_data_packages","title":"Read contents of data package(s) and return a list of tibbles list of tibbles based on the data file(s). Can use metadata to specify data types. — load_data_packages","text":"`load_data_packages()` loads one many data packages returns list. one data package loaded, list list tibbles tibble data (.csv) file data package. multiple data packages loaded, list list lists nested list contains list tibble tibble data file (.csv). See `simplify` details handling lists.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_data_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read contents of data package(s) and return a list of tibbles list of tibbles based on the data file(s). Can use metadata to specify data types. — load_data_packages","text":"","code":"load_data_packages(   reference_id,   directory = here::here(\"data\"),   assign_attributes = FALSE,   simplify = TRUE )  load_data_package(   reference_id,   directory = here::here(\"data\"),   assign_attributes = FALSE,   simplify = TRUE )"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_data_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read contents of data package(s) and return a list of tibbles list of tibbles based on the data file(s). Can use metadata to specify data types. — load_data_packages","text":"reference_id immediate directory/directories data packages reside. data packages downloaded DataStore using `get_data_package()` `get_data_packages()` default settings, DataStore reference ID data package(s). Alternatively, can set `reference_id` \"`load_all`\", load data packages directory specified via `directory` (typically ./data). directory location folder contains data packages (data packages folder containing .csv data files single .xml EML metadata file). data packages downloaded DataStore using default settings `get_data_packages`, folder \"./data\" can use default settings `directory`. assign_attributes Logical. Defaults FALSE. Data loaded using `readr::read_csv()` guessing algorithm calling column types. set `assign_attributes = TRUE`, column types set using data types specified metadata. Currently supported data types include string, dateTime, float, double, integer, categorical (factor R). assignment stringent: instance specify date-time formats using ISO-8601 notation (.e. \"YYYY\", \"yyyy\"), data import NAs. undefined missing values blank cells, data import . run problems consider using default settings letting `read_csv` guess column types. simplify Logical. Defaults TRUE. `simplify = TRUE`, function return list tibbles tibble data file data package(s) specified. tibbles named using following format: \"pkg_<reference_id.filename\" (without filename extension). want load individual data file R processing, use `simplify = TRUE` run `list2env(x, envir=.GlobalEnv)`. set `simplify = FALSE`, object returned either list tibbles identical returned `simplify = TRUE` (one data package loaded) list lists nested list contains one tibble data file data package.Setting `simplify = FALSE` may make easier post-processing package--package level rather tibble--tibble level.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_data_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read contents of data package(s) and return a list of tibbles list of tibbles based on the data file(s). Can use metadata to specify data types. — load_data_packages","text":"list (lists ) tibbles.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_data_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read contents of data package(s) and return a list of tibbles list of tibbles based on the data file(s). Can use metadata to specify data types. — load_data_packages","text":"currently `load_data_packages()` supports EML metadata .csv files. reference_id '","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_data_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read contents of data package(s) and return a list of tibbles list of tibbles based on the data file(s). Can use metadata to specify data types. — load_data_packages","text":"","code":"if (FALSE) { # \\dontrun{ dat <- load_data_packages(2272461) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_pkg_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads EML-formatted metadata into R for inspection and/or editing — load_pkg_metadata","title":"Loads EML-formatted metadata into R for inspection and/or editing — load_pkg_metadata","text":"`load_pkg_metadata()` essentially wrapper around `DPchecker::load_metadata` directory structure pre-set work well  default location `get_data_package` stores downloaded data packages. use default settings `get_data_package` (downloaded data package manually) may find easier adjust directory structure pointing data package load metadata using `DPchecker::load_metadata()`. Much like `load_metadata`, `load_pkg_metadata` requires single .xml file data package directory, metadata file name end *_metadata.xml, file contain schema-valid EML metadata.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_pkg_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads EML-formatted metadata into R for inspection and/or editing — load_pkg_metadata","text":"","code":"load_pkg_metadata(reference_id, directory = \"data\")"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_pkg_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads EML-formatted metadata into R for inspection and/or editing — load_pkg_metadata","text":"reference_id 6-7 digit number corresponding reference ID data package DataStore. data directory reference ID name. directory String. Path data package directory, defaults \"data\".","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_pkg_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads EML-formatted metadata into R for inspection and/or editing — load_pkg_metadata","text":"one data frame global environment.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/load_pkg_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads EML-formatted metadata into R for inspection and/or editing — load_pkg_metadata","text":"","code":"if (FALSE) { # \\dontrun{ load_pkg_metadata(2266200) } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/map_wkt.html","id":null,"dir":"Reference","previous_headings":"","what":"Map WKT geometry (points and polygons) — map_wkt","title":"Map WKT geometry (points and polygons) — map_wkt","text":"`map_wkt()` takes well-known text (WKT) geometry column maps points polygons onto gray leaflet map. NA geometry dropped mapping.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/map_wkt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map WKT geometry (points and polygons) — map_wkt","text":"","code":"map_wkt(   df,   wellknowntext = \"footprintWKT\",   type = \"all\",   remove.duplicates = TRUE )"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/map_wkt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map WKT geometry (points and polygons) — map_wkt","text":"df - name data frame contains WKT geometry. wellknowntext - name specific column within data frame contains WKT geometry. parameter currently fully implemented defaults Darwin Core 'footprintsWKT'. type -  Pick one \"points\", \"polygons\", \"\" map specific geometry types. remove.duplicates - Boolean (TRUE FALSE). Whether remove identical geometries plotting.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/map_wkt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map WKT geometry (points and polygons) — map_wkt","text":"function returns dynamic, zoomable leaflet map specific geometry plotted.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/map_wkt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map WKT geometry (points and polygons) — map_wkt","text":"Define dataframe, column contains WKT, option map specific geometry types.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/map_wkt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map WKT geometry (points and polygons) — map_wkt","text":"","code":"if (FALSE) { # \\dontrun{ #map species observations map_wkt(my_NPS_species_obs)  #map species observations - points only map_wkt(my_NPS_species_obs, wellknowntext = \"footprintWKT\", type = \"points\") } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/rm_local_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete data packages from your local machine — rm_local_packages","title":"Delete data packages from your local machine — rm_local_packages","text":"`rm_local_packages()` delete one specified data packages local machine (DataStore). function assumes data packages folder called \"data\" delete items within folder \"data\" remove \"data\" folder . just delete files using Windows explorer. really hate OS (just like using mouse) can way .","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/rm_local_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete data packages from your local machine — rm_local_packages","text":"","code":"rm_local_packages(   reference_id,   all = FALSE,   path = here::here(),   force = FALSE )"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/rm_local_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete data packages from your local machine — rm_local_packages","text":"reference_id List. One data packages indicated 7-digit reference number. Logical. Defaults `FALSE`. set `TRUE` files directories within \"data\" folder deleted. matter whether data packages files: \"data\" folder empty. `= TRUE`, need supply data package reference IDs reference_id parameter. set TRUE, path String. Defaults current working directory. assumption \"data\" folder containing data packages located working directory (words, assumes used default path downloading data packages using `get_data_packages()`). downloaded data packages custom directory, use `path` specify directory \"data\" folder containing data packages located. include \"data\" folder path supply. force Logical. Defaults `FALSE`. set `TRUE` (instance scripting purposes) output console suppressed.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/rm_local_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete data packages from your local machine — rm_local_packages","text":"invisible","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/rm_local_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete data packages from your local machine — rm_local_packages","text":"","code":"if (FALSE) { # \\dontrun{ #delete a single local data package: delete_packages(1234567)  #delete multiple local data packages: pkgs<-c(1234567, 1234568, 1234569) delete_packages(pkgs, force=TRUE)  #delete all local data packages: delete_packages(all = TRUE)  #delete data packages from a \"data\" directory in a custom location: rm_local_packages(1234567, path = \"C:/Users/username/Documents\") } # }"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/summarize_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect summary statistics on data packages — summarize_packages","title":"Collect summary statistics on data packages — summarize_packages","text":"Given list data package references DataStore function download indicated data packages (using creating folders /data/reference data package; see `get_data_packages` details), load R, collect summary statistics data packages.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/summarize_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect summary statistics on data packages — summarize_packages","text":"","code":"summarize_packages(ref_list, secure = TRUE, check_metadata = FALSE)"},{"path":"https://nationalparkservice.github.io/NPSutils/reference/summarize_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect summary statistics on data packages — summarize_packages","text":"ref_list list string data package reference IDs DataStore (potentially generated via `get_references_list`. secure logical. Defaults TRUE access secure DataStore server restricted data packages. Set FALSE access public references. check_metadata Logical. Defaults FALSE. case, metadata checked loaded. load errors occur due problems .csv files (instance exist). test whether metadata meets minimal requirements (schema-valid), set check_metadata = TRUE.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/summarize_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect summary statistics on data packages — summarize_packages","text":"data frame","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/summarize_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect summary statistics on data packages — summarize_packages","text":"data package fails download (load) R, function return NAs instead summary data data package well message package status (\"Loads\", \"Error\") dataframe function returns. function ignore files fall outside data package specifications (one .csv files single .xml file ending *_metadata.xml). `check_metadata` set default `FALSE`, function attempt load .csv, regardless contents. Data packages restricted access can produce false positives appropriate permissions download data function still download files, populated unhelpful hmtl rather intended data. case, .csv listed 5 columns one row data. Functions completely fail load R likely violate data package specifications fundamental way (e.g. .CSV file instead .csv .csv files ). `check_metadata` set `TRUE`, additional checks tests run data package load errors may occur reasons also multiple .xml files, metadata file name end \"*_metadata.xml\", metadata file, metadata file EML schema-invalid. access restricted DataStore references (e.g. NPS office logged NPS VPN), can set secure = TRUE. give access restricted (internal NPS) references reference restricted named list individuals must named list access reference.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/reference/summarize_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect summary statistics on data packages — summarize_packages","text":"","code":"if (FALSE) { # \\dontrun{ x <- get_ref_list() get_ref_info(x[[1]]) } # }"},{"path":[]},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"id_2025-1-0-1","dir":"Changelog","previous_headings":"","what":"2025-05-08","title":"NPSutils 1.0.1 (development version)","text":"add unit tests functions. Add packages necessary unit tests Suggests DESCRIPTION file.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"id_2025-1-0-1-1","dir":"Changelog","previous_headings":"","what":"2025-03-25","title":"NPSutils 1.0.1 (development version)","text":"fix bug caused functions fail detect certain .csv files","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"id_2025-1-0-1-2","dir":"Changelog","previous_headings":"","what":"2025-03-12","title":"NPSutils 1.0.1 (development version)","text":"Update MIT license ## 2025-02-25 Update CONTRIBUTING.md Update readme remove mention “borked” functions","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"id_2025-1-0-1-3","dir":"Changelog","previous_headings":"","what":"2025-02-22","title":"NPSutils 1.0.1 (development version)","text":"Add CONTRIBUTING.md file.","code":""},{"path":[]},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"id_2025-1-0-0","dir":"Changelog","previous_headings":"","what":"2025-01-22","title":"NPSutils 1.0.0","text":"Update license CC0. ## 2025-01-19 remove get_data_packages_deprecated() breaking change resulting release v.1.0.0. update documentation get_unit_code(), get_park_code(), get_unit_code_info()","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"id_2024-1-0-0","dir":"Changelog","previous_headings":"","what":"2024-12-19","title":"NPSutils 1.0.0","text":"remove validate_data_package() function listed “still construction” mostly obsolete given functions functions DPchecker package. remove load_domains() function working properly conceived data package specifications properly set. ## 2024-12-19 updated load_pkg_metadata simpler essentially call DPchecker::load_metadata preset default directory structure works well default settings get_data_package. Add meta-analysis functions finding producing summary statistics multiple data packages including get_ref_list, get_refs_info(), summarize_packages. ## 2024-10-24 fix get_data_package aliases get_data_packages, specifically now allows users adjust parameters non-default settings. ## 2024-10-21 Bug fixes load_data_package() Bug fixes .get_authors() get_authors now adds period (.) given names single character can handle unlimited number given names. Moved sf, leaflet, stringr imports suggests. Enable .get_contacts() handle cases one contact.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"npsutils-032-lost-coast","dir":"Changelog","previous_headings":"","what":"NPSutils 0.3.2 “Lost Coast”","title":"NPSutils 0.3.2 “Lost Coast”","text":"Add new functions, load_data_packages() load_data_package(), can load data packages (EML .xml data .csv) similarly deprecated load_data_package_deprecated() function also allows data types tibbles loaded specified based information metadata. Deprecate load_data_package() rename load_data_package_deprecated(). Update readme us pak package installation instead devtools. Update _pkgdown.yml use bootstrap 5 added helper functions API requests user input facilitate unit testing. refactored get_data_packages() take advantage new helper functions. added get_data_package() aliases get_data_packages() mostly many people want load one data package forget function plural. renamed load_EML_df() load_core_metadata().","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"npsutils-031-ooh-aah-point","dir":"Changelog","previous_headings":"","what":"NPSutils 0.3.1 “Ooh Aah Point”","title":"NPSutils 0.3.1 “Ooh Aah Point”","text":"added private functions .get_authors() .get_contacts() retrieve authors contacts (emails) EML added load_EML_df(), retrieves commonly available metadata items EML-formatted R object returns single dataframe (loading Power BI)","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"npsutils-030","dir":"Changelog","previous_headings":"","what":"NPSutils 0.3.0","title":"NPSutils 0.3.0","text":"updated datastore api requests v4/v5 v6 (units service remains v2) add global variables base datastore api urls helper functions access utils.R added new functionality get_data_packages(): now check see DataStore reference ID invalid . also check whether reference data package . Substantial feedback reported user flag force set FALSE. added new function rm_local_packages() can delete one () packages within folder called “data” (packages downloaded get_data_packages()). deletes local copies delete data DataStore. changed function name load_metadata() now load_pkg_metadata() conflict DPchecker::load_metadata() updated function names snake_case updated file names match function names updated get_data_packages() (force = FALSE) check newer versions requested data packages prompt user download newest version choose. updated get_data_packages() : include force option. Force defaults false verbose & interactive function. Setting force = TRUE removes interactive portions eliminates informative messages except critical errors. get_data_packages() now inspects location data packages written . folder data package reference id already exists, function prompt user asking want re-download overwrite existing data package (force = FALSE) get_data_packages() now returns full path data package folders, including “/data” directory . update get_park_taxon_refs() hit v5/rest services update documentation: make clear taxon_code parameter get_park_taxon_refs() IRMA taxon code, ITIS TSN. update documentation: make explicit get_park_taxon_refs() get_park_taxon_citations() hitting secure servers warn users results may also need restricted.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"npsutils-0203","dir":"Changelog","previous_headings":"","what":"NPSutils 0.2.0.3","title":"NPSutils 0.2.0.3","text":"added map_wkt() function map points, polygons, Well Known Text coordinates (WKT). WKT used place GPS coordinates sensitive species locations “fuzzed”. case, providing polygon rather exact (albeit fuzzed) preferable clear location exact. WKT efficient way store geographic shapes polygons flat files .csv.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"npsutils-0201","dir":"Changelog","previous_headings":"","what":"NPSutils 0.2.0.1","title":"NPSutils 0.2.0.1","text":"updated get_data_package retrieve 1 files given reference, instance data package multiple files associated . get_data_package file extension agnostic. get_data_package can now take list reference IDs data store. write separate folder reference (within /data folder) put data files relevant folder. get_data_package can now specify directory /data folder child data package folders data files saved . Defaults working directory. get_data_package now returns directory /data directory (sub-directories data files ) enable piping downstream functions. get_data_package informs user file names downloaded saved; informs user .zip extracted informs user original .zip file deleted. get_data_package informs user download failed due specifying secure=TRUE.","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"npsutils-0200","dir":"Changelog","previous_headings":"","what":"NPSutils 0.2.0.0","title":"NPSutils 0.2.0.0","text":"Facelift entire package: Functions parameters snake_case names Tidyverse styling via styler Added bare-bones pkgdown site","code":""},{"path":"https://nationalparkservice.github.io/NPSutils/news/index.html","id":"npsutils-0100","dir":"Changelog","previous_headings":"","what":"NPSutils 0.1.0.0","title":"NPSutils 0.1.0.0","text":"Added NEWS.md file track changes package.","code":""}]
